import { AddressModel } from '@/db/models/address.model'
import { ColorModel } from '@/db/models/color.model'
import { StyleModel } from '@/db/models/style.model'
import { OrderedProductsModel } from '@/db/models/ordered_products.model'
import { OrderModel } from '@/db/models/order.model'
import { StockModel } from '@/db/models/stock.model'
import { CartModel } from '@/db/models/cart.model'
import { SessionModel } from '@/db/models/sessions.model'
import { AccountModel } from '@/db/models/accounts.model'
import { AuthUserModel } from '@/db/models/users.model'
import { ProfileModel } from '@/db/models/profile.model'
import { CategoryModel } from '@/db/models/category.model'
// import {TagModel} from "@/db/models/tag.model";
import { ProductCategoryModel } from '@/db/models/product_category.model'
import { ProductVariantModel } from '@/db/models/product_variant.model'
import { ProductModel } from '@/db/models/product.model'

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤—è–∑–µ–π
// ProductModel.belongsTo(ColorModel, { as: 'primaryColor', foreignKey: 'primary_color' })
// ProductModel.belongsTo(ColorModel, { as: 'secondaryColor', foreignKey: 'secondary_color' })


OrderModel.hasMany(OrderedProductsModel, {
    foreignKey: 'orderId',
    as: 'products'
})
OrderedProductsModel.belongsTo(OrderModel, {
    // foreignKey: 'order'
})


ProductVariantModel.belongsTo(ColorModel, {
    foreignKey: 'colorId',
    as: 'color' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ include
})
ColorModel.hasMany(ProductVariantModel, {
    foreignKey: 'colorId',
    as: 'variants' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç
})


ProductModel.belongsTo(StyleModel, {
    foreignKey: 'styleId',
    as: 'style' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ include
})
StyleModel.hasMany(ProductModel, {
    foreignKey: 'styleId',
    as: 'products' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç
})


ProductModel.hasMany(ProductVariantModel, {
    foreignKey: 'productId',
    as: 'variants' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤ include
})
ProductVariantModel.belongsTo(ProductModel, {
    foreignKey: 'productId',
    as: 'product' // –ò–º—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç
})


// üõí –ö–æ—Ä–∑–∏–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç: "–£ –º–µ–Ω—è –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–æ–≤–∞—Ä–∞"
// CartModel.hasMany(ProductVariantModel, {
//     foreignKey: 'cartId',
//     as: 'product_variants'
// })
//
// // todo —á—Ç–æ-—Ç–æ –∑–¥–µ—Å—å –Ω–µ —Ç–æ –≤ –ª–æ–≥–∏–∫–µüì¶ –í–∞—Ä–∏–∞–Ω—Ç —Ç–æ–≤–∞—Ä–∞ –≥–æ–≤–æ—Ä–∏—Ç: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É –æ–¥–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–µ"
// ProductVariantModel.belongsTo(CartModel, {
//     foreignKey: 'cartId',
//     as: 'cart'
// })


// 1. CartModel –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –æ–¥–Ω–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É –ø—Ä–æ–¥—É–∫—Ç–∞
CartModel.belongsTo(ProductVariantModel, {
    foreignKey: 'productVariant', // –≠—Ç–æ –∏–º—è –ø–æ–ª—è –≤ CartModel
    as: 'product_variants'
})
// 2. –í–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ –º–Ω–æ–≥–∏—Ö –∑–∞–ø–∏—Å—è—Ö –∫–æ—Ä–∑–∏–Ω—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
// ProductVariantModel.hasMany(CartModel, {
//     foreignKey: 'productVariant',
//     as: 'cartItems' // –ò–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∏–º—è
// });


//todo —É–¥–∞–ª–∏—Ç—å —Ç–∞–∫ –∫–∞–∫ –º—ã —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–æ–ª–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
// CartModel.belongsTo(ProductModel, {
//     foreignKey: 'productId',
//     as: 'product'
// })

CartModel.belongsTo(AuthUserModel, {
    foreignKey: 'userId',
    as: 'user'
})


AddressModel.belongsTo(AuthUserModel, {
    // targetKey: 'id',
    foreignKey: 'userId',
})
AuthUserModel.hasMany(AddressModel, {
    // sourceKey: 'id',
    foreignKey: 'userId',
    as: 'addresses', // –ê–ª–∏–∞—Å –¥–ª—è —Å–≤—è–∑–∏
})


AuthUserModel.hasOne(ProfileModel, {
    foreignKey: 'userId', // –≠—Ç–æ –ø–æ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü–µ ourusers, –≤ accounts —Ç—Ä–µ–±—É–µ—Ç sequelize adapter
    as: 'profiles', // –ê–ª–∏–∞—Å –¥–ª—è —Å–≤—è–∑–∏ —Å OuruserModel
    sourceKey: 'id'
})
ProfileModel.belongsTo(AuthUserModel, {
    foreignKey: 'userId',
    as: 'profiles',
    targetKey: 'id'
})


//—Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –∏ –≤ AuthUser –∏ –≤ AccountModel, —Ç–æ –≤—ã–±—Ä–∞–Ω–∞ —Å–≤—è–∑—å –æ–¥–∏–Ω-–∫-–æ–¥–Ω–æ–º—É
AuthUserModel.hasOne(AccountModel, {
    foreignKey: 'userId', // –≠—Ç–æ –ø–æ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü–µ accounts
    as: 'accounts',
    sourceKey: 'id'
})
AccountModel.belongsTo(AuthUserModel, {
    foreignKey: 'userId', // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—é –≤ —Ç–∞–±–ª–∏—Ü–µ accounts
    as: 'authUser', // –ê–ª–∏–∞—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ AuthUser
    targetKey: 'id'
})

// –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ—Å—Å—ã–ª–∞—é—â–µ–π—Å—è —Å–≤—è–∑–∏
CategoryModel.belongsTo(CategoryModel, {
    foreignKey: 'parentId',
    as: 'parent'
})

CategoryModel.hasMany(CategoryModel, {
    foreignKey: 'parentId',
    as: 'children'
})

// –°–≤—è–∑—å "–æ–¥–∏–Ω-–∫–æ-–º–Ω–æ–≥–∏–º" –º–µ–∂–¥—É –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
// CategoryModel.hasMany(ProductModel, {
//     foreignKey: 'categoryId', // –≠—Ç–æ –ø–æ–ª–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ ProductModel
//     as: 'products'
// });

// –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
// ProductModel.belongsTo(CategoryModel, {
//     foreignKey: 'categoryId',
//     as: 'category'
// });

// –°–≤—è–∑—å —Ç–µ–≥–∞ —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º —Ç–µ–≥–æ–º (–¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–µ—Ä–∞—Ä—Ö–∏–∏)
// TagModel.belongsTo(TagModel, {
//     foreignKey: "parentId",
//     as: "parent",
// });
//
// TagModel.hasMany(TagModel, {
//     foreignKey: "parentId",
//     as: "children",
// });

// –°–≤—è–∑—å –º–Ω–æ–≥–∏–µ-–∫–æ-–º–Ω–æ–≥–∏–º —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
// TagModel.belongsToMany(ProductModel, {
//   through: "product_tags", // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
//   foreignKey: "tagId",
//   otherKey: "productId",
//   as: "products",
// });
//
// ProductModel.belongsToMany(TagModel, {
//   through: "product_tags", // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
//   foreignKey: "productId",
//   otherKey: "tagId",
//   as: "tags",
// });

CategoryModel.belongsToMany(ProductModel, {
    through: ProductCategoryModel,
    foreignKey: 'categoryId',
    otherKey: 'productId',
    as: 'products'
})
ProductModel.belongsToMany(CategoryModel, {
    through: ProductCategoryModel,
    foreignKey: 'productId',
    otherKey: 'categoryId',
    as: 'categories'
})

// StockModel.belongsTo(ProductModel, {
//     // sourceKey: 'id',
//     // foreignKey: 'id',
// })
// ProductModel.hasOne(StockModel, {
//     // targetKey: 'id',
//     foreignKey: 'productId',
//     as: 'stock', // –ê–ª–∏–∞—Å –¥–ª—è —Å–≤—è–∑–∏
// })


// –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–≤—è–∑–∏ –º–Ω–æ–≥–∏–µ-–∫–æ-–º–Ω–æ–≥–∏–º
// const ProductCategory = sequelize.define('ProductCategory', {}, { timestamps: false });
//
// CategoryModel.belongsToMany(ProductModel, {
//     through: ProductCategory,
//     foreignKey: 'categoryId',
//     otherKey: 'productId',
//     as: 'products'
// });
//
// ProductModel.belongsToMany(CategoryModel, {
//     through: ProductCategory,
//     foreignKey: 'productId',
//     otherKey: 'categoryId',
//     as: 'categories'
// });

// –°–≤—è–∑–∏ –¥–ª—è Sessions
// SessionModel.belongsTo(UserModel, {
//     foreignKey: 'user_id',
//     as: 'user'
// })
// UserModel.hasMany(SessionModel, {
//     foreignKey: 'user_id',
//     as: 'sessions'
// })

// –°–≤—è–∑–∏ –¥–ª—è Accounts
// AccountModel.belongsTo(UserModel, {
//     foreignKey: 'user_id',
//     as: 'user'
// })
// UserModel.hasMany(AccountModel, {
//     foreignKey: 'user_id',
//     as: 'accounts'
// })

//—Ñ–∞–π–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ root layout
export {
    CartModel,
    ProductModel,
    AddressModel,
    ColorModel,
    OrderedProductsModel,
    OrderModel,
    StockModel,
    StyleModel,
    ProfileModel,
    AccountModel,
    SessionModel,
    AuthUserModel,
    ProductVariantModel
}
